package lab.operating.system.view;

import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;
import javax.swing.JOptionPane;
import lab.operating.system.model.Catalog;
import lab.operating.system.model.Process;
import lab.operating.system.view.interfaces.ActionListenerRegistration;
import lab.operating.system.view.interfaces.CatalogView;
import lab.operating.system.view.interfaces.ProcessView;
import lab.operating.system.view.model.ProcessTableModel;

/**
 *
 * @author C.Mateo
 */
public class ProcessPanel extends javax.swing.JPanel implements ProcessView, CatalogView, ActionListenerRegistration {

    private final ProcessTableModel processTableModel;

    /**
     * Creates new form ProcessPanel
     */
    public ProcessPanel() {
        initComponents();
        processTableModel = new ProcessTableModel();
        jTable1.setModel(processTableModel);
    }

    @Override
    public void sendMessageStatus(String message) {
        processesStatusLb.setText(message);
    }

    @Override
    public void loadProcessesInView(List<Process> processList) {
        processTableModel.setProccessList(processList);
        totalProcessLb.setText(processList.size() + " Processes");
        processesStatusLb.setText("Processes successfully captured");
        filterProcessesBtn.setEnabled(true);
    }

    @Override
    public void addActionListener(ActionListener actionListener) {
        updateProcessView.addActionListener(actionListener);
        filterProcessesBtn.addActionListener(actionListener);
        saveCapturedProcessesBtn.addActionListener(actionListener);
    }

    @Override
    public String getFilterOptionSelected() {
        return (String) filterProcessesComboBox.getSelectedItem();
    }
    
    
    @Override
    public Catalog getCatalogData() {
        String name = JOptionPane.showInputDialog("enter the name of the new catalog: ");
        if(name.isEmpty()){
            JOptionPane.showMessageDialog(null, "¡the catalog name cannot be empty!");
            throw new RuntimeException("the catalog name cannot be empty");
        }
        Catalog catalog = new Catalog();
        catalog.setName(name);
        catalog.setTime(LocalTime.now());
        catalog.setDate(LocalDate.now());
        catalog.setProcessesList(processTableModel.getProcessList());
        return catalog;
    }

    @Override
    public int getNumberOfProcesses() {
        String n = numberOfProcessesTxt.getText();

        if (n.isEmpty()) {
            return -1;
        }

        try {
            return Integer.parseInt(n);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "¡Enter a valid numeric value!");
            throw e;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        updateProcessView = new javax.swing.JButton();
        totalProcessLb = new javax.swing.JLabel();
        processesStatusLb = new javax.swing.JLabel();
        numberOfProcessesTxt = new javax.swing.JTextField();
        filterProcessesComboBox = new javax.swing.JComboBox<>();
        filterProcessesBtn = new javax.swing.JButton();
        lastCaptureProcessesLb = new javax.swing.JLabel();
        saveCapturedProcessesBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "PID", "NAME", "USER ", "DESCRIPTION", "PRIORITY"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        updateProcessView.setText("Capture Processes");
        updateProcessView.setActionCommand("view1_captureProcesses");
        updateProcessView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProcessViewActionPerformed(evt);
            }
        });

        totalProcessLb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        totalProcessLb.setText("0 Processes");

        processesStatusLb.setText(" ");

        filterProcessesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "CPU", "MEMORY" }));

        filterProcessesBtn.setText("Filter");
        filterProcessesBtn.setActionCommand("view1_filter");
        filterProcessesBtn.setEnabled(false);

        lastCaptureProcessesLb.setText(" Process not yet captured");

        saveCapturedProcessesBtn.setText("Save captured processes");
        saveCapturedProcessesBtn.setActionCommand("view1_saveCapturedProcesses");
        saveCapturedProcessesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCapturedProcessesBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lastCaptureProcessesLb, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 255, Short.MAX_VALUE)
                        .addComponent(filterProcessesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(numberOfProcessesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(filterProcessesBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(processesStatusLb, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(totalProcessLb, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(updateProcessView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveCapturedProcessesBtn)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateProcessView)
                    .addComponent(saveCapturedProcessesBtn))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberOfProcessesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filterProcessesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filterProcessesBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastCaptureProcessesLb)))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalProcessLb)
                    .addComponent(processesStatusLb))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateProcessViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProcessViewActionPerformed
        // TODO add your handling code here:
        lastCaptureProcessesLb.setText(" Processes captured at " + LocalTime.now());
    }//GEN-LAST:event_updateProcessViewActionPerformed

    private void saveCapturedProcessesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCapturedProcessesBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveCapturedProcessesBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton filterProcessesBtn;
    private javax.swing.JComboBox<String> filterProcessesComboBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lastCaptureProcessesLb;
    private javax.swing.JTextField numberOfProcessesTxt;
    private javax.swing.JLabel processesStatusLb;
    private javax.swing.JButton saveCapturedProcessesBtn;
    private javax.swing.JLabel totalProcessLb;
    private javax.swing.JButton updateProcessView;
    // End of variables declaration//GEN-END:variables

}
